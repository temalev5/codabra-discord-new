const out = require("./out.js");
let abb_name = [
    ['–ê–ª–∏–∫','–ê–ª—å–±–µ—Ä—Ç','–û–ª–µ–≥'],
    ['–ê–ª—è','–ê–ª–µ–≤—Ç–∏–Ω–∞','–ê–ª–∏–Ω–∞','–ê–ª–∏—Å–∞','–ê–ª–ª–∞','–ê–ª—å–±–∏–Ω–∞'],
    ['–ê–Ω—è','–ê–Ω–Ω–∞'],
    ['–ê—Ä—Ç—ë–º','–ê—Ä—Ç–µ–º–∏–π','–¢—ë–º–∞'],
    ['–ê—Å—è','–ê–∫—Å–∏–Ω—å—è','–¢–∞–∏—Å–∏—è'],

    ['–ë–æ—Ä—è','–ë–æ—Ä–∏—Å','–ë–æ—Ä–∏—Å–ª–∞–≤'],

    ['–í–∞–¥—è','–í–∞–¥–∏–º','–í–ª–∞–¥–∏–º–∏—Ä','–í–ª–∞–¥–∏—Å–ª–∞–≤','–í–ª–∞–¥–ª–µ–Ω','–í–ª–∞–¥','–í–æ–≤–∞','–í–æ–ª–æ–¥—è','–°–ª–∞–≤–∞','–í—è—á–µ—Å–ª–∞–≤','–Ø—Ä–æ—Å–ª–∞–≤','–°–≤—è—Ç–æ—Å–ª–∞–≤','–í–∞–¥–∏–∫'],
    ['–í–∞–ª–µ—Ä–∞','–í–∞–ª–µ—Ä–∏–π','–í–∞–ª–µ—Ä–∏—è','–õ–µ—Ä–∞'],
    ['–í–∞–ª—è','–í–∞–ª–µ–Ω—Ç–∏–Ω','–í–∞–ª–µ–Ω—Ç–∏–Ω–∞'],
    ['–í–∞–Ω—è','–ò–≤–∞–Ω'],
    ['–í–∞—Å—è','–í–∞—Å–∏–ª–∏–π','–í–∞—Å–∏–ª–∏—Å–∞'],
    ['–í–∞—Ä—è','–í–∞—Ä–≤–∞—Ä–∞'],
    ['–í–µ—Ä–∞','–í–µ–Ω–µ—Ä–∞','–í–µ—Ä–æ–Ω–∏–∫–∞','–í–µ—Ä–æ–Ω–∏–∫–∞','–í–∏–∫–∞','–í–∏–∫—Ç–æ—Ä–∏—è','–ù–∏–∫–∞'],
    ['–í–∏—Ç—è','–í–∏–∫—Ç–æ—Ä'],
    ['–í–µ–Ω—è','–í–µ–Ω–∏–∞–º–∏–Ω'],
    ['–í–∏—Ç–∞–ª–∏–π','–í–∏—Ç–∞–ª–∏–∫','–í–∏—Ç–∞–ª—è'],

    ['–ì–∞–ª—è','–ì–∞–ª–∏–Ω–∞'],
    ['–ì–∞—Ä–∏–∫','–ì–µ–æ—Ä–≥–∏–π','–ò–≥–æ—Ä—å'],
    ['–ì–µ–Ω–∞','–ì–µ–Ω–Ω–∞–¥–∏–π'],
    ['–ì—Ä–∏—à–∞','–ì—Ä–∏–≥–æ—Ä–∏–π'],
    ['–ì–µ–ª—è','–ê–Ω–≥–µ–ª–∏–Ω–∞'],

    ['–î–∞–Ω—è','–î–∞–Ω–∏–∏–ª','–î–∞–Ω–∏–ª'],
    ['–î–∞—à–∞','–î–∞—Ä—å—è'],
    ['–î–∏–º–∞','–î–º–∏—Ç—Ä–∏–π'],
    ['–î–∏–Ω–∞','–î–∏–∞–Ω–∞'],
    ['–î—É–Ω—è','–ï–≤–¥–æ–∫–∏—è'],

    ['–ñ–µ–Ω—è','–ï–≤–≥–µ–Ω–∏–π','–ï–≤–≥–µ–Ω–∏—è'],

    ['–ò—Ä–∞','–ò—Ä–∏–Ω–∞'],

    ['–ö–µ—à–∞','–ò–Ω–Ω–æ–∫–µ–Ω—Ç–∏–π'],
    ['–ö–æ–ª—è','–ù–∏–∫–æ–ª–∞–π'],
    ['–ö–æ—Å—Ç—è','–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω'],
    ['–ö—Å—é—à–∞','–ö—Å–µ–Ω–∏—è'],
    ['–ö–∞—Ç—è','–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞'],

    ['–õ—ë–Ω—è','–õ–µ–æ–Ω–∏–¥'],
    ['–õ–µ—Å—è','–û–ª–µ—Å—è'],
    ['–õ—ë—à–∞','–ê–ª–µ–∫—Å–µ–π'],
    ['–õ–∏–∑–∞','–ï–ª–∏–∑–∞–≤–µ—Ç–∞'],
    ['–õ—é—Å—è','–õ—é–¥–º–∏–ª–∞','–ú–∏–ª–∞'],
    ['–õ–µ–≤','–õ—ë–≤–∞'],
    ['–õ–µ–Ω–∞','–ï–ª–µ–Ω–∞'],
    ['–õ—é–±–∞','–õ—é–±–æ–≤—å'],

    ['–ú–∞—Ä–∏—à–∞','–ú–∞—Ä–∏–Ω–∞','–ú–∞—Ä–∏—è','–ú–∞—à–∞','–ú–∞—Ä—É—Å—è'],
    ['–ú–∏—à–∞','–ú–∏—Ö–∞–∏–ª'],
    ['–ú–∞–∫—Å','–ú–∞–∫—Å–∏–º'],

    ['–ù–∏–Ω–∞','–ê–Ω—Ç–æ–Ω–∏–Ω–∞'],
    ['–ù–∞—Å—Ç—è','–ê–Ω–∞—Å—Ç–∞—Å–∏—è'],
    ['–ù–∞–¥—è','–ù–∞–¥–µ–∂–¥–∞'],
    ['–ù–∞—Ç–∞—à–∞','–ù–∞—Ç–∞–ª—å—è'],

    ['–û–ª—è','–û–ª—å–≥–∞'],

    ['–ü–∞—à–∞','–ü–∞–≤–µ–ª'],
    ['–ü–µ—Ç—è','–ü—ë—Ç—Ä'],
    ['–ü–æ–ª—è','–ü–æ–ª–∏–Ω–∞','–ü–µ–ª–∞–≥–µ—è'],

    ['–†–∏—Ç–∞','–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞'],
    ['–†–æ–º–∞','–†–æ–º–∞–Ω'],

    ['–°–∞–Ω—è','–°–∞—à–∞','–ê–ª–µ–∫—Å–∞–Ω–¥—Ä','–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞'],
    ['–°–≤–µ—Ç–∞','–°–≤–µ—Ç–ª–∞–Ω–∞'],
    ['–°–µ–≤–∞','–í—Å–µ–≤–æ–ª–æ–¥'],
    ['–°—ë–º–∞','–°–µ–º—ë–Ω'],
    ['–°–µ–Ω—è','–ê—Ä—Å–µ–Ω–∏–π'],
    ['–°–µ—Ä—ë–∂–∞','–°–µ—Ä–≥–µ–π'],
    ['–°–æ–Ω—è','–°–æ—Ñ—å—è','–°–æ—Ñ–∏—è'],
    ['–°—Ç–∞—Å','–°—Ç–∞–Ω–∏—Å–ª–∞–≤'],
    ['–°—Ç—ë–ø–∞','–°—Ç–µ–ø–∞–Ω'],

    ['–¢–∞–Ω—è','–¢–∞—Ç—å—è–Ω–∞'],
    ['–¢–æ–ª—è','–ê–Ω–∞—Ç–æ–ª–∏–π'],
    ['–¢–∏–º–∞','–¢–∏–º–æ—Ñ–µ–π '],

    ['–§–µ–¥—è','–§—ë–¥–æ—Ä'],

    ['–≠–ª—è','–≠–≤–µ–ª–∏–Ω–∞'],

    ['–Æ—Ä–∞','–Æ—Ä–∏–π']
]
let timmers = []

let message_buffer=[];

function deleteGroups(groups){
    guild = client.guilds.cache.find(guild=>guild.id==705350096656793671);
    groups.push("–û.–£1–ü8-19(8-12–ª–µ—Ç)")
    for (var i=0; i<groups.length;i++){
        let channel = guild.channels.cache.find( ch => ch.name == groups[i].toLowerCase().replace(".","").replace(/\s?\((.*)\)/gm,"") )
        if (channel)
            channel.delete()
        channel = guild.channels.cache.find( ch => ch.name == groups[i].toUpperCase().replace(/\s?\((.*)\)/gm,"") )
        if (channel)
            channel.delete()
        let role = guild.roles.cache.find( r => r.name == "–£—á–µ–Ω–∏–∫ " +  groups[i].toUpperCase().replace(/\s?\((.*)\)/gm,"") )
        if (role)
            role.delete()
    }
}

function clearTimmers(){
    for (var i=0;i<timmers.length;i++){
        clearTimeout(timmers[i])
    }
    timmers = []
}

function setTimmer(minutes, data, func){
    for(var i=0;i<data.length;i++){
        let current_time = new Date();
        let less_date = new Date (data[i].time);
        less_date.setMinutes( less_date.getMinutes() + minutes );
        if (( less_date - current_time) <= 0 ){
            continue
        }
        timmers.push(setTimeout(func, less_date - current_time, data[i]));
    }
}

function timeManagment(lesson_data){
    setTimmer(+10, lesson_data, pInChannel)

    let time_slots = []
    for (var i=0;i<lesson_data.length;i++){
        let idx = time_slots.findIndex(ts=> ts.time == lesson_data[i].time)
        if (idx==-1){
            idx = time_slots.push({
                time: lesson_data[i].time,
                teachers:[]
            })
            idx--;
        }

        time_slots[idx].teachers.push({
            group: lesson_data[i].title,
            start: lesson_data[i].start,
            end: lesson_data[i].end,
            first_name: lesson_data[i].teacher.first_name,
            last_name:lesson_data[i].teacher.last_name,
        })

    }

    setTimmer(-35, time_slots, tInChannel )
}

function tInChannel(time_slot){

    for(var i=0;i<time_slot.teachers.length;i++){
        let channel = guild.channels.cache.find(channel => 
            channel.type =='voice' && 
            time_slot.teachers[i].group.toLowerCase().replace(/\s?\((.*)\)/gm,"") == 
            channel.name.toLowerCase().replace(/\s?\((.*)\)/gm,"") )

        let member;

        if (channel){
            member = inChannel(time_slot.teachers[i].first_name,
                time_slot.teachers[i].last_name, channel)
            
            time_slot.teachers[i].in_channel = Boolean(member)
        }

        if (!member){
            member = inChannel(time_slot.teachers[i].first_name,
                time_slot.teachers[i].last_name)
        }

        if (!member) {send(admin, '–ù–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å *' + 
                                    time_slot.teachers[i].title + '*'); continue}

        time_slot.teachers[i].status = mStatus(member)

    }

    out.messageAboutMissTeachers(time_slot)

}

function pInChannel(lesson){

    let in_channel_counter = 0;
    let channel = guild.channels.cache.find(channel => 
                    channel.type =='voice' && 
                    lesson.title.toLowerCase().replace(/\s?\((.*)\)/gm,"") == 
                    channel.name.toLowerCase().replace(/\s?\((.*)\)/gm,"") )
    
    if (!channel) return

    for(var i=0;i<lesson.participants.length;i++){
        let member = inChannel(lesson.participants[i].first_name, 
                               lesson.participants[i].last_name, channel)
        if (member){
            lesson.participants[i].in_channel = true
            in_channel_counter++
            if (in_channel_counter == lesson.participants.length){
                send(admin, ':ribbon: *' + lesson.title.toUpperCase() + '*\n *–í—Å–µ –≤ –∫–∞–Ω–∞–ª–µ*')
                send(miss_participants, ':ribbon: *' + lesson.title.toUpperCase() + '*\n *–í—Å–µ –≤ –∫–∞–Ω–∞–ª–µ*')
                return
            }
        } 
    }
    out.messageAboutMissParticipants(lesson)
}

function mStatus(member){
    let clientStatus;
    let version = member.presence.clientStatus ? Object.keys(member.presence.clientStatus)[0] : null;
    if (version){
        clientStatus = {
            version: (version == 'desktop') ? 'laptop': version,
            status: member.presence.clientStatus[version]
        }
    }
    else{
        clientStatus = {
            status: 'offline'
        }
    }
    return clientStatus
}

function setTeacherRole(status){
    let mb = message_buffer.splice(0,1)[0];

    if (!mb) return

    if (status){
        let member = guild.members.cache.find(m=>m.id == mb.msg.author.id)
        let role = guild.roles.cache.find(role=>role.name == "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å" )
        member.edit({
            nick: mb.f_name.join(' ')
        })
        member.roles.add(role).then(
            () => {mb.msg.react("üëç")}
        )
        send(admin,"–ù–æ–≤—ã–π –ø—Ä–µ–ø–æ–¥: "+ mb.f_name.join(' '))
    }
    else{
        mb.msg.reply('',{
            embed: {
                color: 16711680,
                description: "–ü—Ä–∏–≤–µ—Ç <@"+mb.msg.author.id+">\n\
                              –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è\n\
                              –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑, –Ω–∞–ø–∏—à–∏ **–ò–º—è –§–∞–º–∏–ª–∏—é –ö–ª—é—á**\n\
                              **–ü—Ä–∏–º–µ—Ä:** *–û–∫—Å–∞–Ω–∞ –†–æ–¥–∑—è–Ω–∫–æ 4-:#+fq@.)sPz{t*\n\
                              –ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–µ –ò–º—è –§–∞–º–∏–ª–∏—é –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ: https://codabra.org/profile/account/"
                    }
                })
        send(admin,"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è "+ mb.f_name.join(' '))
    }
}

function _findAbbName(nickname){
    let len = nickname.length

    for(var j=0;j<len;j++){
        let c = abb_name.find(a=> a.findIndex(b=>
                                 b.toLowerCase().replace(/—ë/g,'–µ') == 
                                 nickname[j].toLowerCase().replace(/—ë/g,'–µ')) != -1)
        if(c){
            nickname.splice(j,1);
            nickname = nickname.concat(c)
            len--;
            j--;
        }
    }
    return nickname
}

function inChannel(first_name='', last_name='', channel){
    let members;

    if (channel){
        members = channel.members.array();
    }
    else{
        members = guild.members.cache.array();
    }

    for(var i=0;i<members.length;i++){
        let fn_mark = false;
        let ln_mark = false;
        let nickname;

        if (!members[i].nickname)
            nickname = members[i].user.username
        else
            nickname = members[i].nickname

        nickname = nickname.split(' ');
        
        nickname = _findAbbName(nickname)

        for (var j=0;j<nickname.length;j++){
            if ( nickname[j].toLowerCase().replace(/—ë/g,'–µ') == 
                first_name.toLowerCase().replace(/—ë/g,'–µ') ){
                    fn_mark = true;
                }
            else if( nickname[j].toLowerCase().replace(/—ë/g,'–µ') == 
                last_name.toLowerCase().replace(/—ë/g,'–µ') ) {
                    ln_mark = true;
                }

            if (fn_mark && ln_mark) 
            {   
                if (channel){
                    return members[i];
                }
                else{
                    let role = members[i].roles.cache.find(rl=>rl.name == "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å" || 
                                                               rl.name == "AdMinistrator" ||
                                                               rl.name =='Administrator')
                    if (role) return members[i];
                } 
            }
        }
    }
}


function checkRole(group_data){
    let mb = message_buffer.splice(0,1)[0];
    let groups = [];
    let f_name = mb.f_name.slice()
    mb.f_name = _findAbbName(mb.f_name)
    
    here: for (var i=0;i<mb.groups.length;i++){
        let gd = group_data.find(gd=> gd.title.toLowerCase().replace(/\s?\((.*)\)/gm,"") == 
                             mb.groups[i].toLowerCase().replace(/\s?\((.*)\)/gm,"") )
        
        if (!gd) {
            groups.push({group:mb.groups[i].toLowerCase().replace(/\s?\((.*)\)/gm,""),
                        result: 2})
            continue
        }

        for (var j = 0; j < gd.participants.length;j++){
            let fn_mark = false;
            let ln_mark = false;
            
            for (var x=0;x<mb.f_name.length;x++){
                if ( mb.f_name[x].toLowerCase().replace(/—ë/g,'–µ') == 
                     gd.participants[j].first_name.toLowerCase().replace(/—ë/g,'–µ') ){
                        fn_mark = true;
                    }
                else if( mb.f_name[x].toLowerCase().replace(/—ë/g,'–µ') == 
                         gd.participants[j].last_name.toLowerCase().replace(/—ë/g,'–µ') ) {
                        ln_mark = true;
                    }
    
                if (fn_mark && ln_mark) 
                {   
                    groups.push({group:gd.title.toLowerCase().replace(/\s?\((.*)\)/gm,""),
                                    result:0})
                    continue here;
                }
            }
        }

        groups.push({group:gd.title.toLowerCase().replace(/\s?\((.*)\)/gm,""),
                     result: 1})

    }

    let support_channel = guild.channels.cache.find(c=>c.name=="–ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å")
    for(var i = 0;i<3;i++){
        let gr = groups.filter(gr=>gr.result == i)

        if (gr != 0){
            switch (i){
                case 0:
                    mb.msg.member.edit({
                         nick: f_name[0][0].toUpperCase() + f_name[0].substring(1) + ' ' + 
                               f_name[1][0].toUpperCase() + f_name[1].substring(1) + ' ' +
                               gr.map(g=>g.group)[0].toUpperCase()
                    })
                    togleRole(mb.msg, gr.map(g=>g.group), mb.groups.length)
                    break;
                case 1:
                    mb.msg.channel.send('',{
                        embed: {
                            color: 16711680,
                            description: "–ü—Ä–∏–≤–µ—Ç <@"+mb.msg.member.id+">\n\
                                          –ù–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–≥–æ —É—á–µ–Ω–∏–∫–∞ –≤ **–≥—Ä—É–ø–ø–µ(–∞—Ö) `` "+ gr.map(g=>g.group).join(' ').toUpperCase() +" ``**\n\
                                          –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑, –Ω–∞–ø–∏—à–∏ **–ò–º—è –§–∞–º–∏–ª–∏—é –ì—Ä—É–ø–ø—É**\n\
                                          **–ü—Ä–∏–º–µ—Ä:** *–Æ–ª–∏—è –ë–µ–ª—è–µ–≤–∞ –û.–£1–í–í–ê1-19*\n\
                                          **–ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å –∫–∞–∫–∞—è —É —Ç–µ–±—è –≥—Ä—É–ø–ø–∞, –ø–æ—Å–º–æ—Ç—Ä–∏ —Å—é–¥–∞:** https://www.notion.so/2dc2dc0f96ee44ba924d441f98c1ce3f\n\
                                          –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π —è –ø–µ—Ä–µ—Å–ª–∞–ª —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ü–æ–¥–¥–µ—Ä–∂–∫—É"
                                }
                            }).then((m)=>m.delete({ timeout: 120000 }))
                    let ms = '';
                    gr = gr.map(g=>g.group)
                    for (var j=0;j<gr.length;j++){
                        let g = group_data.find(gd=> gd.title.toLowerCase().replace(/\s?\((.*)\)/gm,"") == 
                                 gr[j].toLowerCase().replace(/\s?\((.*)\)/gm,"") )
                        ms += "–ù–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–≥–æ —É—á–µ–Ω–∏–∫–∞ –≤ **–≥—Ä—É–ø–ø–µ(–∞—Ö) `` "+ gr.map(g=>g.group).join(' ').toUpperCase() +" ``**\n\
                               **–°–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã** `` "+ g.title +" ``\n"
                        for (var x=0;x<g.participants.length;x++){
                            ms += g.participants[x].first_name + " " + g.participants[x].last_name + "\n"
                        }
                    }
                    support_channel.send('',{
                        embed: {
                            color: 16711680,
                            description: "**<@" + mb.msg.member.id + "> –ø–∏—à–µ—Ç:**\n" + mb.msg.content + "\n" + ms
                        }
                    })

                    return;
                case 2:
                    mb.msg.channel.send('',{
                        embed: {
                            color: 16711680,
                            description: "–ü—Ä–∏–≤–µ—Ç <@"+mb.msg.member.id+">\n\
                                          –ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–∞ **–≥—Ä—É–ø–ø–∞(—ã) `` "+ gr.map(g=>g.group).join(' ').toUpperCase() +" ``**\n\
                                          –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑, –Ω–∞–ø–∏—à–∏ **–ò–º—è –§–∞–º–∏–ª–∏—é –ì—Ä—É–ø–ø—É**\n\
                                          **–ü—Ä–∏–º–µ—Ä:** *–Æ–ª–∏—è –ë–µ–ª—è–µ–≤–∞ –û.–£1–í–í–ê1-19*\n\
                                          **–ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å –∫–∞–∫–∞—è —É —Ç–µ–±—è –≥—Ä—É–ø–ø–∞, –ø–æ—Å–º–æ—Ç—Ä–∏ —Å—é–¥–∞:** https://www.notion.so/2dc2dc0f96ee44ba924d441f98c1ce3f\n\
                                          –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π —è –ø–µ—Ä–µ—Å–ª–∞–ª —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ü–æ–¥–¥–µ—Ä–∂–∫—É"
                                }
                            }).then((m)=>m.delete({ timeout: 120000 }))

                    support_channel.send('',{
                        embed: {
                            color: 16711680,
                            description: "–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–∞ **–≥—Ä—É–ø–ø–∞(—ã) `` "+ gr.map(g=>g.group).join(' ').toUpperCase() +" ``**\n\
                                          **<@" + mb.msg.member.id + "> –ø–∏—à–µ—Ç:**\n" + mb.msg.content
                        }
                    })

                    break;
            }
        }
    }
}

function togleRole(msg, groups, len=groups.length){

    for (var i=0;i<groups.length;i++){
        groups[i] = '–£—á–µ–Ω–∏–∫ ' + groups[i].toUpperCase()
    }

    let succes_counter = 0;
    for (var i=0;i<groups.length;i++){
        let role = msg.guild.roles.cache.find(role=>role.name == groups[i] )
        if (role){
            if (msg.member.roles.cache.find(role => role.name == groups[i])){
                msg.member.roles.remove(role)
                                .then( () => {succes_counter++; if (succes_counter==len) msg.react('üëç')})
            }
            else{
                msg.member.roles.add(role)
                                .then( () => {succes_counter++; if (succes_counter==len) msg.react('üëç')})
            }
        }
    }
}

function message(msg,mmsg){

    if (mmsg) msg = mmsg
    delete mmsg

    if (msg.author.bot) return

    if (msg.channel.type == 'dm'){
        let message = msg.content.split(' ')
        
        if (message.length != 3)
            return
        
        let key = message.splice(2,1)
    
        if ( key == "eceSIRz|4w7mvwu" ){
            return
        }
        else if( key == 'V"De#1{Cp1[F8AM' ){
            let member = guild.members.cache.find(m=>m.id == msg.author.id)
            let role = guild.roles.cache.find(role=>role.name == "–ú–µ–Ω–µ–¥–∂–µ—Ä" )
            member.edit({
                nick: message.join(' ')
           })
            member.roles.add(role).then(
                () => {msg.react("üëç")}
            )
        }
        else if( key == 'h-0v3jd*>4Pbb_%'){

            let member = guild.members.cache.find(m=>m.id == msg.author.id)

            if (!member){
                msg.reply('', {
                    embed: {
                        color: 16711680,
                        description: "–ü—Ä–∏–≤–µ—Ç <@"+msg.author.id+">\n\
                                      –ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–µ–±—è –≤ Codabra Online\n\
                                      –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è: discord.gg/vEdEV7v"
                            }
                        })
                return
            }

            if (member.roles.cache.findKey(r=>r.name == "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å") != -1){
                msg.reply('', {
                    embed: {
                        color: 16711680,
                        description: "–ü—Ä–∏–≤–µ—Ç <@"+msg.author.id+">\n\
                                      –¢—ã —É–∂–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å"
                            }
                        })
                msg.react("üëç")
                return
            }

            message_buffer.push({
                msg:msg,
                f_name:message,
            })
            groupOrUserInfo(message, false)
        }
        else{
            return
        }
    }

    let message = msg.content.toLowerCase();
    let support_channel = guild.channels.cache.find(c=>c.name=="–∫–∞–Ω–∞–ª-–ø–æ–¥–¥–µ—Ä–∂–∫–∏")
    if (!support_channel) send(admin, "rip –∫–∞–Ω–∞–ª-–ø–æ–¥–¥–µ—Ä–∂–∫–∏")

    if (msg.channel.name === '—Ñ–∏–æ-–∏-–≥—Ä—É–ø–ø–∞') {
        
        let groups = []

        if(message.search(/[–∞-—è–ê-–Ø][.][0-9–∞-—è–ê-–Ø]*[.]?[0-9–∞-—è–ê-–Ø]*[-][0-9]+[\s0-9-()]*/gm) != -1){
            let g = message.match(/[–∞-—è–ê-–Ø][.][0-9–∞-—è–ê-–Ø]*[.]?[0-9–∞-—è–ê-–Ø]*[-][0-9]+[\s0-9-()]*/gm)
            for (var i=0;i<g.length;i++){
                groups.push(g[i].toUpperCase())
            }
        }

        if (msg.member.roles.cache.find(role => role.name == "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å" || role.name == "–ú–µ–Ω–µ–¥–∂–µ—Ä")){
            togleRole(msg, groups, message.split(' ').length )
            return
        }

        if (message.indexOf("–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å") != -1 || message.replace(/—ë/g,'–µ').indexOf("—Å—Ç–∞–∂–µ—Ä") != -1 || message.indexOf("–º–µ–Ω–µ–¥–∂–µ—Ä") != -1){
            msg.member.createDM().then( (dm) => { 
                dm.send('',{
                embed: {
                    color: 16711680,
                    description: "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ä–æ–ª–∏ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ú–µ–Ω–µ–¥–∂–µ—Ä–∞\
                                –ø—Ä–∏—à–ª–∏ –º–Ω–µ –æ—Ç–≤–µ—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º **–ò–º—è –§–∞–º–∏–ª–∏—é –∏ –ö–ª—é—á**\n\
                                **–ö–ª—é—á** –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ: https://www.notion.so/discord-347567d82dae475fa63a7967de571c7f\n\
                                **–ü—Ä–∏–º–µ—Ä:** *–û–∫—Å–∞–Ω–∞ –†–æ–¥–∑—è–Ω–∫–æ 4-:#+fq@.)sPz{t*",
                }
            }) })
            msg.delete()
            return
        }

        if (groups==0) { 
            
            msg.channel.send('',{
                embed: {
                    color: 16711680,
                    description: "–ü—Ä–∏–≤–µ—Ç <@"+msg.member.id+">\n\
                                  –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ **–≥—Ä—É–ø–ø—É** –≤ —Ç–≤–æ–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏\n\
                                  –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑, –Ω–∞–ø–∏—à–∏ **–ò–º—è –§–∞–º–∏–ª–∏—é –ì—Ä—É–ø–ø—É**\n\
                                  **–ü—Ä–∏–º–µ—Ä:** *–Æ–ª–∏—è –ë–µ–ª—è–µ–≤–∞ –û.–£1–í–í–ê1-19*\n\
                                  **–ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å –∫–∞–∫–∞—è —É —Ç–µ–±—è –≥—Ä—É–ø–ø–∞, –ø–æ—Å–º–æ—Ç—Ä–∏ —Å—é–¥–∞:** https://www.notion.so/2dc2dc0f96ee44ba924d441f98c1ce3f\n\
                                  :warning: –≠—Ç–æ—Ç –∫–∞–Ω–∞–ª –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –≤—ã–¥–∞—á–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É –≥—Ä—É–ø–ø—ã\n\
                                  –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π —è –ø–µ—Ä–µ—Å–ª–∞–ª —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ <#"+support_channel.id+">"
                        }
                    }).then((m)=>m.delete({ timeout: 120000 }))

            support_channel.send('',{
                embed: {
                    color: 16711680,
                    description: "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ **–≥—Ä—É–ø–ø—É** –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏\n\
                                  **<@" + msg.member.id + "> –ø–∏—à–µ—Ç:**\n" + msg.content
                }
            })

            msg.delete()
            return

        }

        message = message.replace(/\n/gm,' ')

        for (var i=0;i<groups.length;i++){
            message = message.replace(groups[i].toLowerCase(),'')
        }

        message = message.split(' ')
        
        for (var i=0;i<message.length;i++){
            if (!message[i]) {message.splice(i, 1);i--;}  
        }

        if(message.length != 2) {

            msg.channel.send('',{
                embed: {
                    color: 16711680,
                    description: "–ü—Ä–∏–≤–µ—Ç <@"+msg.member.id+">\n\
                                  –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ **–ò–º—è –§–∞–º–∏–ª–∏—é** –≤ —Ç–≤–æ–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏\n\
                                  –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑, –Ω–∞–ø–∏—à–∏ **–ò–º—è –§–∞–º–∏–ª–∏—é –ì—Ä—É–ø–ø—É**\n\
                                  **–ü—Ä–∏–º–µ—Ä:** *–Æ–ª–∏—è –ë–µ–ª—è–µ–≤–∞ –û.–£1–í–í–ê1-19*\n\
                                  :warning: –≠—Ç–æ—Ç –∫–∞–Ω–∞–ª –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –≤—ã–¥–∞—á–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É –≥—Ä—É–ø–ø—ã\n\
                                  –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π —è –ø–µ—Ä–µ—Å–ª–∞–ª —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ <#"+support_channel.id+">"
                        }
                    }).then((m)=>m.delete({ timeout: 120000 }))
            
            support_channel.send('',{
                embed: {
                    color: 16711680,
                    description: "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ **–ò–º—è –§–∞–º–∏–ª–∏—é** –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏\n\
                                  **<@" + msg.member.id + "> –ø–∏—à–µ—Ç:**\n" + msg.content
                }
            })

            msg.delete()
            return
        }

        message_buffer.push({
            msg:msg,
            groups:groups,
            f_name:message,
        })
        groupOrUserInfo(groups, true)

    }
}

module.exports.timeManagment = timeManagment
global.tInChannel = tInChannel
global.message = message
module.exports.deleteGroups = deleteGroups
module.exports.clearTimmers = clearTimmers
module.exports.checkRole = checkRole
module.exports.setTeacherRole = setTeacherRole